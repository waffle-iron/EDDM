function RadiusValueChanged() { FindLatLonData(), BuildPostUrl() } function RadiusTypeChanged() { FindLatLonData(), BuildPostUrl() } function TargetAreaTypeChanged() { $("#radZipCodes").is(":checked") ? ($("#txtZipCodes").val($("#txtZipCodesList").val()), BuildPostUrl()) : ($("#txtZipCodes").val("(not defined)"), BuildPostUrl()), $("#defineYourAreaToBegin").hide(1e3) } function AddressChanged() { parseInt($("#txtAddress").val().length) > 0 ? ($("#validationSummary").hide(), $("#hypNext").removeAttr("class"), $("#hypNext").attr("class", "btn btn-cta"), $("#addressControlBlock").removeAttr("class"), $("#addressControlBlock").attr("class", "form-group"), $("#addressLabel").removeAttr("class"), $("#addressLabel").attr("class", "label formLabel formLabelRequired"), ValidateAddressAndZip()) : ($("#validationSummary").show(), $("#validationSummary").removeAttr("class"), $("#validationSummary").attr("class", "alert alert-danger"), $("#validationMessage").html("Address is required."), $("#hypNext").removeAttr("class"), $("#hypNext").attr("class", "btn btn-default disabled"), $("#addressControlBlock").removeAttr("class"), $("#addressControlBlock").attr("class", "form-group has-error"), $("#addressLabel").removeAttr("class"), $("#addressLabel").attr("class", "label label-danger")) } function ZipCodeChanged() { parseInt($("#txtZipCode").val().length) >= 5 ? ($("#validationSummary").hide(), $("#hypNext").removeAttr("class"), $("#hypNext").attr("class", "btn btn-cta"), $("#txtZipCode").removeAttr("class"), $("#txtZipCode").attr("class", "form-control"), $("#zipCodeControlBlock").removeAttr("class"), $("#zipCodeControlBlock").attr("class", "form-group"), $("#zipCodeLabel").removeAttr("class"), $("#zipCodeLabel").attr("class", "label formLabel formLabelRequired"), ValidateAddressAndZip()) : ($("#validationSummary").show(), $("#validationSummary").removeAttr("class"), $("#validationSummary").attr("class", "alert alert-danger"), $("#validationMessage").html("A 5 digiti Zip Code is required."), $("#hypNext").removeAttr("class"), $("#hypNext").attr("class", "btn btn-default disabled"), $("#zipCodeControlBlock").removeAttr("class"), $("#zipCodeControlBlock").attr("class", "form-group has-error"), $("#zipCodeLabel").removeAttr("class"), $("#zipCodeLabel").attr("class", "label label-danger")) } function ZipCodesListChanged() { var t = $("#txtZipCodesList").val(); t.length < 5 ? ($("#validationSummary").show(), $("#validationSummary").removeAttr("class"), $("#validationSummary").attr("class", "alert alert-danger"), $("#validationMessage").html("A valid 5 digit Zip Code is required."), $("#hypNextZipList").removeAttr("class"), $("#hypNextZipList").attr("class", "btn btn-default disabled"), $("#zipCodesListControlBlock").removeAttr("class"), $("#zipCodesListControlBlock").attr("class", "form-group has-error"), $("#zipCodesListLabel").removeAttr("class"), $("#zipCodesListLabel").attr("class", "label label-danger"), $("#zipCodeInstructions").show()) : ($("#validationSummary").hide(), $("#hypNextZipList").removeAttr("class"), $("#hypNextZipList").attr("class", "btn btn-cta"), $("#txtZipCodesList").removeAttr("class"), $("#txtZipCodesList").attr("class", "form-control"), $("#zipCodesListControlBlock").removeAttr("class"), $("#zipCodesListControlBlock").attr("class", "form-group"), $("#zipCodesListLabel").removeAttr("class"), $("#zipCodesListLabel").attr("class", "label formLabel"), $("#txtZipCodes").val(t.replace(" ", "")), $("#zipCodeInstructions").hide(), BuildPostUrl()) } function HomeOwnershipSelected(t) { if ("btnHomeowner" == t) { $("#btnRenter").removeClass(), $("#btnRenter").addClass("btn btn-sm btn-block"), $("#txtHomeOwnership").val("O"); var e = $("#btnHomeowner").attr("class"); "btn btn-sm btn-block selected" == e ? ($("#txtHomeOwnership").val("(not defined)"), $("#btnHomeowner").removeClass(), $("#btnHomeowner").addClass("btn btn-sm btn-block"), $("#homeOwnershipLabel").html("No Filter")) : ($("#txtHomeOwnership").val("O"), $("#btnHomeowner").removeClass(), $("#btnHomeowner").addClass("btn btn-sm btn-block selected"), $("#homeOwnershipLabel").html("Homeowner")) } else { $("#btnHomeowner").removeClass(), $("#btnHomeowner").addClass("btn btn-sm btn-block"), $("#txtHomeOwnership").val("R"); var e = $("#btnRenter").attr("class"); "btn btn-sm btn-block selected" == e ? ($("#txtHomeOwnership").val("(not defined)"), $("#btnRenter").removeClass(), $("#btnRenter").addClass("btn btn-sm btn-block"), $("#homeOwnershipLabel").html("No Filter")) : ($("#txtHomeOwnership").val("R"), $("#btnRenter").removeClass(), $("#btnRenter").addClass("btn btn-sm btn-block selected"), $("#homeOwnershipLabel").html("Renter")) } BuildPostUrl(), CalculateAddressedCount() } function MaritalSelected(t) { if ("btnMarried" == t) { $("#btnSingle").removeClass(), $("#btnSingle").addClass("btn btn-sm btn-block"), $("#txtMartialStatus").val("M"); var e = $("#btnMarried").attr("class"); "btn btn-sm btn-block selected" == e ? ($("#txtMartialStatus").val("(not defined)"), $("#btnMarried").removeClass(), $("#btnMarried").addClass("btn btn-sm btn-block"), $("#maritalStatusLabel").html("No Filter")) : ($("#txtMartialStatus").val("M"), $("#btnMarried").removeClass(), $("#btnMarried").addClass("btn btn-sm btn-block selected"), $("#maritalStatusLabel").html("Married")) } else { $("#btnMarried").removeClass(), $("#btnMarried").addClass("btn btn-sm btn-block"), $("#txtMartialStatus").val("S"); var e = $("#btnSingle").attr("class"); "btn btn-sm btn-block selected" == e ? ($("#txtMartialStatus").val("(not defined)"), $("#btnSingle").removeClass(), $("#btnSingle").addClass("btn btn-sm btn-block"), $("#maritalStatusLabel").html("No Filter")) : ($("#txtMartialStatus").val("S"), $("#btnSingle").removeClass(), $("#btnSingle").addClass("btn btn-sm btn-block selected"), $("#maritalStatusLabel").html("Single")) } BuildPostUrl(), CalculateAddressedCount() } function ChildrenSelected(t) { if ("btnChildren" == t) { $("#btnNoChildren").removeClass(), $("#btnNoChildren").addClass("btn btn-sm btn-block"), $("#txtChildren").val("Y"); var e = $("#btnChildren").attr("class"); "btn btn-sm btn-block selected" == e ? ($("#txtChildren").val("(not defined)"), $("#btnChildren").removeClass(), $("#btnChildren").addClass("btn btn-sm btn-block"), $("#childrenLabel").html("No Filter")) : ($("#txtChildren").val("Y"), $("#btnChildren").removeClass(), $("#btnChildren").addClass("btn btn-sm btn-block selected"), $("#childrenLabel").html("Children")) } else { $("#btnChildren").removeClass(), $("#btnChildren").addClass("btn btn-sm btn-block"), $("#txtChildren").val("N"); var e = $("#btnNoChildren").attr("class"); "btn btn-sm btn-block selected" == e ? ($("#txtChildren").val("(not defined)"), $("#btnNoChildren").removeClass(), $("#btnNoChildren").addClass("btn btn-sm btn-block"), $("#childrenLabel").html("No Filter")) : ($("#txtChildren").val("N"), $("#btnNoChildren").removeClass(), $("#btnNoChildren").addClass("btn btn-sm btn-block selected"), $("#childrenLabel").html("No Children")) } BuildPostUrl(), CalculateAddressedCount() } function GenderSelected(t) { if ("btnMale" == t) { $("#btnFemale").removeClass(), $("#btnFemale").addClass("btn btn-sm btn-block"), $("#txtGender").val("M"); var e = $("#btnMale").attr("class"); "btn btn-sm btn-block selected" == e ? ($("#txtGender").val("(not defined)"), $("#btnMale").removeClass(), $("#btnMale").addClass("btn btn-sm btn-block"), $("#genderLabel").html("No Filter")) : ($("#txtGender").val("M"), $("#btnMale").removeClass(), $("#btnMale").addClass("btn btn-sm btn-block selected"), $("#genderLabel").html("Male")) } else { $("#btnMale").removeClass(), $("#btnMale").addClass("btn btn-sm btn-block"), $("#txtGender").val("F"); var e = $("#btnFemale").attr("class"); "btn btn-sm btn-block selected" == e ? ($("#txtGender").val("(not defined)"), $("#btnFemale").removeClass(), $("#btnFemale").addClass("btn btn-sm btn-block"), $("#genderLabel").html("No Filter")) : ($("#txtGender").val("F"), $("#btnFemale").removeClass(), $("#btnFemale").addClass("btn btn-sm btn-block selected"), $("#genderLabel").html("Female")) } BuildPostUrl(), CalculateAddressedCount() } function GetIncomeRange() { var t = function (t, e, a) { this.letter = t, this.minVal = e, this.maxVal = a }, e = [new t("A", 0, 14999), new t("B", 15e3, 24999), new t("C", 25e3, 34999), new t("D", 35e3, 49999), new t("E", 5e4, 74999), new t("F", 75e3, 99999), new t("G", 1e5, 124999), new t("H", 125e3, 149999), new t("I", 15e4, 174999), new t("J", 175e3, 199999), new t("K", 2e5, 249999), new t("L", 25e4, 999999)]; e.inArray2 = function (t, e) { for (var a = "", l = this, s = 0; s < l.length; s++) { var n = l[s]; t <= n.maxVal && e >= n.minVal && (a = a + n.letter + ",", $("#txtCombinedIncome").val(a)) } if (0 == parseInt(t) && parseInt(e) >= 25e4) $("#txtCombinedIncome").val("(not defined)"); else { var r = $("#txtCombinedIncome").val().length, o = $("#txtCombinedIncome").val().substring(0, r - 1); $("#txtCombinedIncome").val(o) } }; var a = parseInt($("#hidRawMinIncome").val()), l = parseInt($("#hidRawMaxIncome").val()); e.inArray2(a, l) } function BuildIncomeLabel() { var t = "", e = $("#minIncome").html(), a = $("#maxIncome").html(), l = e.length, s = a.length; "$0" == e && (e = "$0,000", l = e.length); var n = e.substring(0, l - 4) + "k", r = ""; return r = "$250,000+" == a ? "$250k+" : a.substring(0, s - 4) + "k", t = n + " - " + r } function GetAgeRange() { var t = function (t, e, a) { this.ageRange = t, this.minAge = e, this.maxAge = a }, e = [new t("18-24", 18, 24), new t("25-29", 25, 29), new t("30-34", 30, 34), new t("35-39", 35, 39), new t("40-44", 40, 44), new t("45-49", 45, 49), new t("50-54", 50, 54), new t("55-59", 55, 59), new t("60-64", 60, 64), new t("65-69", 65, 69), new t("70-74", 70, 74), new t("75+", 75, 99)]; e.inArray2 = function (t, e) { for (var a = "", l = this, s = 0; s < l.length; s++) { var n = l[s]; t <= n.maxAge && e >= n.minAge && (a = a + n.ageRange + ",", $("#txtAgeRanges").val(a)) } if (18 == parseInt(t) && parseInt(e) >= 75) $("#txtAgeRanges").val("(not defined)"); else { var r = $("#txtAgeRanges").val().length, o = $("#txtAgeRanges").val().substring(0, r - 1); $("#txtAgeRanges").val(o) } }; var a = parseInt($("#hidRawMinAge").val()), l = parseInt($("#hidRawMaxAge").val()); e.inArray2(a, l) } function BuildAgeLabel() { var t = $("#minAge").html(), e = $("#maxAge").html(), a = ""; return a = "18" == t && e >= "75+" ? "No Filter" : t + "-" + e } function PropValueSelected() { var t = parseInt(CountSelectedCheckboxes("PropertyValue")), e = 19; e > t && ($("#selectAllPropValueLabel").html("Select All"), $("#chkSelectAllPropValue").prop("checked", !1)), BuildPropValueString(), BuildPropValueLabel(), BuildPostUrl(), CalculateAddressedCount(), $("#propertyControlBlock").block({ message: '<p class="text-danger text-center"><br /><br /><span class="fa fa-2x fa-cog fa-spin"></span></p>', css: { width: "100%", height: "100%", border: "1px solid #dddddd" } }), setTimeout(function () { $("#propertyControlBlock").unblock() }, 2500) } function BuildPropValueLabel() { var t = parseInt($("#hidPropValueTotalSelected").val()); 0 == t ? results = "No Filter" : 1 == t ? results = t + " range selected" : results = t + " ranges selected", $("#propertyLabel").html(results) } function BuildPropValueString() { var t = 19, e = "", a = parseInt(CountSelectedCheckboxes("PropertyValue")); if (0 == a | a == t) e = "(not defined)"; else { for (i = 1; i <= t; i++) $("#chkPropValue" + i).is(":checked") && (e = e + $("#chkPropValue" + i).val() + ","); var l = e.length; e = e.substring(0, l - 1) } $("#txtPropertyValue").val(e) } function NetWorthSelected() { var t = parseInt(CountSelectedCheckboxes("NetWorth")), e = 11; e > t && ($("#selectAllNetWorthLabel").html("Select All"), $("#chkSelectAllNetWorth").prop("checked", !1)), BuildNetWorthString(), BuildNetWorthLabel(), BuildPostUrl(), CalculateAddressedCount(), $("#netWorthControlBlock").block({ message: '<p class="text-danger text-center"><br /><br /><span class="fa fa-2x fa-cog fa-spin"></span></p>', css: { width: "100%", height: "100%", border: "1px solid #dddddd" } }), setTimeout(function () { $("#netWorthControlBlock").unblock() }, 2500) } function BuildNetWorthLabel() { var t = parseInt($("#hidNetWorthTotalSelected").val()); 0 == t ? results = "No Filter" : 1 == t ? results = t + " range selected" : results = t + " ranges selected", $("#netWorthLabel").html(results) } function BuildNetWorthString() { var t = 11, e = "", a = parseInt(CountSelectedCheckboxes("NetWorth")); if (0 == a | a == t) e = "(not defined)"; else { for (i = 1; i <= t; i++) $("#chkNetWorth" + i).is(":checked") && (e = e + $("#chkNetWorth" + i).val() + ","); var l = e.length; e = e.substring(0, l - 1) } $("#txtNetWorth").val(e) } function EthnicitySelected(t) { var e = $("#txtEthnicity").val(), a = "Z", l = "R", s = "O", n = "B", r = "F", o = "G", i = "H", c = "I", d = "J", b = "M", m = "N", h = "P", p = "S", v = "D", u = "X"; if ("btnAfricanAmerican" == t) { var f = $("#btnAfricanAmerican").attr("class"); "btn btn-sm btn-block selected" == f ? ($("#btnAfricanAmerican").removeClass(), $("#btnAfricanAmerican").addClass("btn btn-sm btn-block"), e.length > 1 ? (e = e.replace("," + a, ""), e = e.replace(a + ",", ""), $("#txtEthnicity").val(e)) : $("#txtEthnicity").val("(not defined)"), UpdateEthnicityTotal(-1)) : ($("#txtEthnicity").val(BuildEthnicityString(a)), $("#btnAfricanAmerican").removeClass(), $("#btnAfricanAmerican").addClass("btn btn-sm btn-block selected"), UpdateEthnicityTotal(1)) } if ("btnArab" == t) { var f = $("#btnArab").attr("class"); "btn btn-sm btn-block selected" == f ? ($("#btnArab").removeClass(), $("#btnArab").addClass("btn btn-sm btn-block"), e.length > 1 ? (e = e.replace("," + l, ""), e = e.replace(l + ",", ""), $("#txtEthnicity").val(e)) : $("#txtEthnicity").val("(not defined)"), UpdateEthnicityTotal(-1)) : ($("#txtEthnicity").val(BuildEthnicityString(l)), $("#btnArab").removeClass(), $("#btnArab").addClass("btn btn-sm btn-block selected"), UpdateEthnicityTotal(1)) } if ("btnAsian" == t) { var f = $("#btnAsian").attr("class"); "btn btn-sm btn-block selected" == f ? ($("#btnAsian").removeClass(), $("#btnAsian").addClass("btn btn-sm btn-block"), e.length > 1 ? (e = e.replace("," + s, ""), e = e.replace(s + ",", ""), $("#txtEthnicity").val(e)) : $("#txtEthnicity").val("(not defined)"), UpdateEthnicityTotal(-1)) : ($("#txtEthnicity").val(BuildEthnicityString(s)), $("#btnAsian").removeClass(), $("#btnAsian").addClass("btn btn-sm btn-block selected"), UpdateEthnicityTotal(1)) } if ("btnAsianNonOriental" == t) { var f = $("#btnAsianNonOriental").attr("class"); "btn btn-sm btn-block selected" == f ? ($("#btnAsianNonOriental").removeClass(), $("#btnAsianNonOriental").addClass("btn btn-sm btn-block"), e.length > 1 ? (e = e.replace("," + n, ""), e = e.replace(n + ",", ""), $("#txtEthnicity").val(e)) : $("#txtEthnicity").val("(not defined)"), UpdateEthnicityTotal(-1)) : ($("#txtEthnicity").val(BuildEthnicityString(n)), $("#btnAsianNonOriental").removeClass(), $("#btnAsianNonOriental").addClass("btn btn-sm btn-block selected"), UpdateEthnicityTotal(1)) } if ("btnFrench" == t) { var f = $("#btnFrench").attr("class"); "btn btn-sm btn-block selected" == f ? ($("#btnFrench").removeClass(), $("#btnFrench").addClass("btn btn-sm btn-block"), e.length > 1 ? (e = e.replace("," + r, ""), e = e.replace(r + ",", ""), $("#txtEthnicity").val(e)) : $("#txtEthnicity").val("(not defined)"), UpdateEthnicityTotal(-1)) : ($("#txtEthnicity").val(BuildEthnicityString(r)), $("#btnFrench").removeClass(), $("#btnFrench").addClass("btn btn-sm btn-block selected"), UpdateEthnicityTotal(1)) } if ("btnGerman" == t) { var f = $("#btnGerman").attr("class"); "btn btn-sm btn-block selected" == f ? ($("#btnGerman").removeClass(), $("#btnGerman").addClass("btn btn-sm btn-block"), e.length > 1 ? (e = e.replace("," + o, ""), e = e.replace(o + ",", ""), $("#txtEthnicity").val(e)) : $("#txtEthnicity").val("(not defined)"), UpdateEthnicityTotal(-1)) : ($("#txtEthnicity").val(BuildEthnicityString(o)), $("#btnGerman").removeClass(), $("#btnGerman").addClass("btn btn-sm btn-block selected"), UpdateEthnicityTotal(1)) } if ("btnHispanic" == t) { var f = $("#btnHispanic").attr("class"); "btn btn-sm btn-block selected" == f ? ($("#btnHispanic").removeClass(), $("#btnHispanic").addClass("btn btn-sm btn-block"), e.length > 1 ? (e = e.replace("," + i, ""), e = e.replace(i + ",", ""), $("#txtEthnicity").val(e)) : $("#txtEthnicity").val("(not defined)"), UpdateEthnicityTotal(-1)) : ($("#txtEthnicity").val(BuildEthnicityString(i)), $("#btnHispanic").removeClass(), $("#btnHispanic").addClass("btn btn-sm btn-block selected"), UpdateEthnicityTotal(1)) } if ("btnItalian" == t) { var f = $("#btnItalian").attr("class"); "btn btn-sm btn-block selected" == f ? ($("#btnItalian").removeClass(), $("#btnItalian").addClass("btn btn-sm btn-block"), e.length > 1 ? (e = e.replace("," + c, ""), e = e.replace(c + ",", ""), $("#txtEthnicity").val(e)) : $("#txtEthnicity").val("(not defined)"), UpdateEthnicityTotal(-1)) : ($("#txtEthnicity").val(BuildEthnicityString(c)), $("#btnItalian").removeClass(), $("#btnItalian").addClass("btn btn-sm btn-block selected"), UpdateEthnicityTotal(1)) } if ("btnJewish" == t) { var f = $("#btnJewish").attr("class"); "btn btn-sm btn-block selected" == f ? ($("#btnJewish").removeClass(), $("#btnJewish").addClass("btn btn-sm btn-block"), e.length > 1 ? (e = e.replace("," + d, ""), e = e.replace(d + ",", ""), $("#txtEthnicity").val(e)) : $("#txtEthnicity").val("(not defined)"), UpdateEthnicityTotal(-1)) : ($("#txtEthnicity").val(BuildEthnicityString(d)), $("#btnJewish").removeClass(), $("#btnJewish").addClass("btn btn-sm btn-block selected"), UpdateEthnicityTotal(1)) } if ("btnMiscellaneous" == t) { var f = $("#btnMiscellaneous").attr("class"); "btn btn-sm btn-block selected" == f ? ($("#btnMiscellaneous").removeClass(), $("#btnMiscellaneous").addClass("btn btn-sm btn-block"), e.length > 1 ? (e = e.replace("," + b, ""), e = e.replace(b + ",", ""), $("#txtEthnicity").val(e)) : $("#txtEthnicity").val("(not defined)"), UpdateEthnicityTotal(-1)) : ($("#txtEthnicity").val(BuildEthnicityString(b)), $("#btnMiscellaneous").removeClass(), $("#btnMiscellaneous").addClass("btn btn-sm btn-block selected"), UpdateEthnicityTotal(1)) } if ("btnNorthernEuropean" == t) { var f = $("#btnNorthernEuropean").attr("class"); "btn btn-sm btn-block selected" == f ? ($("#btnNorthernEuropean").removeClass(), $("#btnNorthernEuropean").addClass("btn btn-sm btn-block"), e.length > 1 ? (e = e.replace("," + m, ""), e = e.replace(m + ",", ""), $("#txtEthnicity").val(e)) : $("#txtEthnicity").val("(not defined)"), UpdateEthnicityTotal(-1)) : ($("#txtEthnicity").val(BuildEthnicityString(m)), $("#btnNorthernEuropean").removeClass(), $("#btnNorthernEuropean").addClass("btn btn-sm btn-block selected"), UpdateEthnicityTotal(1)) } if ("btnPolynesian" == t) { var f = $("#btnPolynesian").attr("class"); "btn btn-sm btn-block selected" == f ? ($("#btnPolynesian").removeClass(), $("#btnPolynesian").addClass("btn btn-sm btn-block"), e.length > 1 ? (e = e.replace("," + h, ""), e = e.replace(h + ",", ""), $("#txtEthnicity").val(e)) : $("#txtEthnicity").val("(not defined)"), UpdateEthnicityTotal(-1)) : ($("#txtEthnicity").val(BuildEthnicityString(h)), $("#btnPolynesian").removeClass(), $("#btnPolynesian").addClass("btn btn-sm btn-block selected"), UpdateEthnicityTotal(1)) } if ("btnScottishIrish" == t) { var f = $("#btnScottishIrish").attr("class"); "btn btn-sm btn-block selected" == f ? ($("#btnScottishIrish").removeClass(), $("#btnScottishIrish").addClass("btn btn-sm btn-block"), e.length > 1 ? (e = e.replace("," + p, ""), e = e.replace(p + ",", ""), $("#txtEthnicity").val(e)) : $("#txtEthnicity").val("(not defined)"), UpdateEthnicityTotal(-1)) : ($("#txtEthnicity").val(BuildEthnicityString(p)), $("#btnScottishIrish").removeClass(), $("#btnScottishIrish").addClass("btn btn-sm btn-block selected"), UpdateEthnicityTotal(1)) } if ("btnSouthernEuropean" == t) { var f = $("#btnSouthernEuropean").attr("class"); "btn btn-sm btn-block selected" == f ? ($("#btnSouthernEuropean").removeClass(), $("#btnSouthernEuropean").addClass("btn btn-sm btn-block"), e.length > 1 ? (e = e.replace("," + v, ""), e = e.replace(v + ",", ""), $("#txtEthnicity").val(e)) : $("#txtEthnicity").val("(not defined)"), UpdateEthnicityTotal(-1)) : ($("#txtEthnicity").val(BuildEthnicityString(v)), $("#btnSouthernEuropean").removeClass(), $("#btnSouthernEuropean").addClass("btn btn-sm btn-block selected"), UpdateEthnicityTotal(1)) } if ("btnUnclassified" == t) { var f = $("#btnUnclassified").attr("class"); "btn btn-sm btn-block selected" == f ? ($("#btnUnclassified").removeClass(), $("#btnUnclassified").addClass("btn btn-sm btn-block"), e.length > 1 ? (e = e.replace("," + u, ""), e = e.replace(u + ",", ""), $("#txtEthnicity").val(e)) : $("#txtEthnicity").val("(not defined)"), UpdateEthnicityTotal(-1)) : ($("#txtEthnicity").val(BuildEthnicityString(u)), $("#btnUnclassified").removeClass(), $("#btnUnclassified").addClass("btn btn-sm btn-block selected"), UpdateEthnicityTotal(1)) } $("#ethnicityControlBlock").block({ message: '<h5 class="text-center"><br /><br /><span class="fa fa-2x fa-cog fa-spin"></span></h5>', css: { width: "100%", height: "100%", border: "1px solid #dddddd" } }), setTimeout(function () { $("#ethnicityControlBlock").unblock() }, 2500), BuildPostUrl(), CalculateAddressedCount() } function UpdateEthnicityTotal(t) { var e = parseInt($("#hidTotalEthnicitySelected").val()), a = e + parseInt(t); 1 > a ? $("#ethnicityLabel").html("No Filter") : $("#ethnicityLabel").html(a + " selected"), $("#txtTotalEthnicitySelected").val(a), $("#hidTotalEthnicitySelected").val(a) } function BuildEthnicityString(t) { var e = $("#txtEthnicity").val(), a = ""; return a = "(not defined)" != e ? e + "," + t : t } function CalculateAddressedCount() { $("#resultsBlock").block({ message: '<div><br/><br/><br/><br/><h5><span class="fa fa-2x fa-cog fa-spin"></span>&nbsp;Targeting <u>your</u> customers.....</h5><br/><br/><br/><br/><br/><br/><br/><br/></div>', css: { width: "100%", height: "100%", border: "1px solid #dddddd" } }); var t = 0, e = $("#txtUrlText").val(); $.ajax({ url: e, type: "GET", dataType: "json", success: function (e) { t = parseInt(e), 0 >= t ? ($("#returnedResults").hide(), $("#noResults").show()) : ($("#returnedResults").show(), $("#noResults").hide(), $("#addressedMailCount").html(Formatter.Commas(t)), $("#txtCount").val(t)), $("#resultsBlock").unblock() }, error: function (t) { console.log("postURL: " + e), console.log("error calling api..."), $("#addressedMailCount").html("Error" + t.statusText), $("#resultsBlock").unblock() } }) } function BuildPostUrl() { var t = $("#ddlRadiusValue").val(), e = $("#ddlRadiusType").val(), a = $("#txtLatitude").val(), l = $("#txtLongitude").val(), s = $("#txtGender").val(), n = $("#txtHomeOwnership").val(), r = $("#txtCombinedIncome").val(), o = $("#txtEthnicity").val(), i = $("#txtChildren").val(), c = $("#txtMartialStatus").val(), d = $("#txtAgeRanges").val(), b = $("#txtPropertyValue").val(), m = $("#txtNetWorth").val(), h = $("#txtZipCodes").val(), p = "//ktools.eddmsite.com/AddressedMailCounts.ashx"; p = p + "?Radius=" + t, p = p + "&Lat=" + a, p = p + "&Lon=" + l, p = p + "&RadiusType=" + e, p += "&CountOnly=True", p = p + "&Gender=" + s, p = p + "&HomeOwnership=" + n, p = p + "&Income=" + r, p = p + "&Ethnicity=" + o, p = p + "&KidsPresent=" + i, p = p + "&MaritalStatus=" + c, p = p + "&AgeRange=" + d, p = p + "&ZipCode=" + h, p = p + "&HomeMktVal=" + b, p = p + "&NetWorth=" + m, $("#txtUrlText").val(ReplaceAll(p, "(not defined)", "")), $("#txtAPIUrl").val(ReplaceAll(p, "(not defined)", "")) } function GoToStep2() { if ($("#radZipCodes").is(":checked")) { var t = $("#txtZipCodes").val(); t.length < 5 ? ($("#validationSummary").show(), $("#validationSummary").removeAttr("class"), $("#validationSummary").attr("class", "alert alert-danger"), $("#validationMessage").html("A valid 5 digit Zip Code is required."), $("#hypNextZipList").removeAttr("class"), $("#hypNextZipList").attr("class", "btn btn-default disabled"), $("#zipCodesListControlBlock").removeAttr("class"), $("#zipCodesListControlBlock").attr("class", "form-group has-error"), $("#zipCodesListLabel").removeAttr("class"), $("#zipCodesListLabel").attr("class", "label label-danger")) : ($("#validationSummary").hide(), $("#hypNextZipList").removeAttr("class"), $("#hypNextZipList").attr("class", "btn btn-cta"), $("#txtZipCodesList").removeAttr("class"), $("#txtZipCodesList").attr("class", "form-control"), $("#zipCodesListControlBlock").removeAttr("class"), $("#zipCodesListControlBlock").attr("class", "form-group"), $("#zipCodesListLabel").removeAttr("class"), $("#zipCodesListLabel").attr("class", "label formLabel formLabelRequired"), BuildPostUrl(), UpdateOrderSteps(2), $("#introBlock").hide(1e3), $("#targetAreaBlock").hide(1e3), $("#resultsBlock").show(1e3), $("#filtersBlock").show(1e3), CalculateAddressedCount()) } else UpdateOrderSteps(2), $("#introBlock").hide(1e3), $("#targetAreaBlock").hide(1e3), $("#resultsBlock").show(1e3), $("#filtersBlock").show(1e3), CalculateAddressedCount() } function FindLatLonData() { var t = $("#txtAddress").val(), e = $("#txtZipCode").val(); $.ajax({ url: "//demographics2.eddmsite.com/Resources/Geocode.ashx", type: "POST", data: { A: t, Z: e }, success: function (t) { var e = ReplaceAll(t, "(", ""), a = ReplaceAll(e, ")", ""), l = ReplaceAll(a, ";", ""), s = JSON.parse(l); $("#txtLatitude").val(s.Latitude), $("#txtLongitude").val(s.Longitude) }, error: function (t) { console.log("FindLatLon Error " + t.statusText) } }) } function EscapeRegExp(t) { return t.replace(/([.*+?^=!:${}()|\[\]\/\\])/g, "\\$1") } function ReplaceAll(t, e, a) { return t.replace(new RegExp(EscapeRegExp(e), "g"), a) } function GetPriceQuote(t, e, a, l) { var s = 0, n = 0, r = "Percent", o = 1, i = 0, c = 0, d = $("#txtZipCode").val(), b = {}; b.pid = t, b.qty = e, b.hqty = i, b.sqty = c, b.distid = s, b.drops = o, b.zip = d, b.wd = "false", b.wt = "false", b.m = n, b.mt = r, $.ajax({ type: "POST", dataType: "json", url: "/resources/PrintRateQuote.ashx", data: b, success: function (t) { if (null != t && "" != t) { var e = 1e3 * t.PricePerPiece; if (Number(t.Price) < Number(e)) { var s = Number(e) - Number(t.Price), n = s + Number(t.Price), r = Number(t.DesignPrice); r > 0 && (n += r), t.FormattedTotalPrice = "$" + n.toFixed(2).replace(/\d(?=(\d{3})+\.)/g, "$&,") } $(l).html(t.FormattedTotalPrice), $(a).html(t.FormattedPricePerPiece) } }, error: function () { } }) } function CountSelectedCheckboxes(t) { var e = 0, a = 11, l = 19; if ("NetWorth" == t) { for (i = 1; i <= a; i++) $("#chkNetWorth" + i).is(":checked") && e++; $("#txtNetWorthTotalSelected").val(e), $("#hidNetWorthTotalSelected").val(e) } if ("PropertyValue" == t) { for (i = 1; i <= l; i++) $("#chkPropValue" + i).is(":checked") && e++; $("#txtPropValueTotalSelected").val(e), $("#hidPropValueTotalSelected").val(e) } return e } function UpdateOrderSteps(t) { 1 == t && ($("#liStep1").removeClass(), $("#liStep2").removeClass(), $("#liStep3").removeClass(), $("#liStep4").removeClass(), $("#liStep5").removeClass(), $("#liStep1").addClass("current")), 2 == t && ($("#liStep1").removeClass(), $("#liStep2").removeClass(), $("#liStep3").removeClass(), $("#liStep4").removeClass(), $("#liStep5").removeClass(), $("#liStep1").addClass("visited"), $("#liStep2").addClass("current")), 3 == t && ($("#liStep1").removeClass(), $("#liStep2").removeClass(), $("#liStep3").removeClass(), $("#liStep4").removeClass(), $("#liStep5").removeClass(), $("#liStep1").addClass("visited"), $("#liStep2").addClass("visited"), $("#liStep3").addClass("current")), 4 == t && ($("#liStep1").removeClass(), $("#liStep2").removeClass(), $("#liStep3").removeClass(), $("#liStep4").removeClass(), $("#liStep5").removeClass(), $("#liStep1").addClass("visited"), $("#liStep2").addClass("visited"), $("#liStep3").addClass("visited"), $("#liStep4").addClass("current")), 5 == t && ($("#liStep1").removeClass(), $("#liStep2").removeClass(), $("#liStep3").removeClass(), $("#liStep4").removeClass(), $("#liStep5").removeClass(), $("#liStep1").addClass("visited"), $("#liStep2").addClass("visited"), $("#liStep3").addClass("visited"), $("#liStep4").addClass("visited"), $("#liStep5").addClass("current")) } function ValidateAddressAndZip() { var t = $("#txtAddress").val().length, e = $("#txtZipCode").val().length; t > 1 && e >= 5 ? ($("#addressInstructions").hide(), $("#hypNext").removeAttr("class"), $("#hypNext").attr("class", "btn btn-cta"), $("#targetAreaBlock").block({ message: '<h5><br /><br /><br /><br /><span class="fa fa-cog fa-spin"></span>&nbsp;Targeting with this address.....</h5>', css: { width: "100%", height: "100%", border: "1px solid #dddddd" } }), FindLatLonData(), setTimeout(function () { BuildPostUrl(), $("#targetAreaBlock").unblock() }, 2500)) : ($("#addressInstructions").show(), $("#hypNext").removeAttr("class"), $("#hypNext").attr("class", "btn btn-default disabled")) } function CheckForRevisit() { var t = $("#txtAddress").val(), e = $("#txtZipCode").val(), a = $("#txtZipCodesList").val(), l = !1; return l = t.length >= 5 && e.length >= 5 ? !0 : a.length >= 5 ? !0 : !1 } function HideFirstTimeBlocks() { $("#hypNext").removeAttr("class"), $("#hypNext").attr("class", "btn btn-cta"), $("#addressInstructions").hide(), $("#hypNextZipList").removeAttr("class"), $("#hypNextZipList").attr("class", "btn btn-cta"), $("#zipCodeInstructions").hide(), $("#defineYourAreaToBegin").hide(), $("#radZipCodes").is(":checked") && ($("#addressBlock").hide(), $("#zipCodesBlock").show()), $("#radAddress").is(":checked") && ($("#addressBlock").show(), $("#zipCodesBlock").hide()) } function PreselectFiltersAndLabels() { var t = $("#txtHomeOwnership").val(); "O" == t && ($("#btnHomeowner").removeClass(), $("#btnHomeowner").addClass("btn btn-sm btn-block selected"), $("#homeOwnershipLabel").html("Homeowner")), "R" == t && ($("#btnRenter").removeClass(), $("#btnRenter").addClass("btn btn-sm btn-block selected"), $("#homeOwnershipLabel").html("Renter")); var e = $("#txtMartialStatus").val(); "M" == e && ($("#btnMarried").removeClass(), $("#btnMarried").addClass("btn btn-sm btn-block selected"), $("#maritalStatusLabel").html("Married")), "S" == e && ($("#btnSingle").removeClass(), $("#btnSingle").addClass("btn btn-sm btn-block selected"), $("#maritalStatusLabel").html("Single")); var a = $("#txtChildren").val(); "Y" == a && ($("#btnChildren").removeClass(), $("#btnChildren").addClass("btn btn-sm btn-block selected"), $("#childrenLabel").html("Children")), "N" == a && ($("#btnNoChildren").removeClass(), $("#btnNoChildren").addClass("btn btn-sm btn-block selected"), $("#childrenLabel").html("No Children")); var l = $("#txtGender").val(); "M" == l && ($("#btnMale").removeClass(), $("#btnMale").addClass("btn btn-sm btn-block selected"), $("#genderLabel").html("Male")), "F" == l && ($("#btnFemale").removeClass(), $("#btnFemale").addClass("btn btn-sm btn-block selected"), $("#genderLabel").html("Female")); var s = $("#txtCombinedIncome").val(), n = $("#txtMinIncome").val(), r = $("#txtMaxIncome").val(); if ("(not defined)" != s) { $("#minIncome").html(Formatter.CurrencyDollars(n)), r >= 25e4 ? $("#maxIncome").html(Formatter.CurrencyDollars(r) + "+") : $("#maxIncome").html(Formatter.CurrencyDollars(r)), $("#incomeLabel").html(BuildIncomeLabel()); var o = parseInt($("#txtMinIncome").val()), i = parseInt($("#txtMaxIncome").val()); $("#incomeSlider").slider({ values: [o, i] }) } var c = $("#txtMinAge").val(), d = $("#txtMaxAge").val(), b = $("#txtAgeRanges").val(); if ("(not defined)" != b) { $("#minAge").html(c), d >= 75 ? $("#maxAge").html(d + "+") : $("#maxAge").html(d), $("#ageLabel").html(BuildAgeLabel()); var m = parseInt($("#txtMinAge").val()), h = parseInt($("#txtMaxAge").val()); $("#ageSlider").slider({ values: [m, h] }) } var p = $("#txtPropValueTotalSelected").val(), v = $("#txtPropertyValue").val(); "(not defined)" != v && $("#propertyLabel").html(p + " ranges selected"); var u = $("#txtNetWorthTotalSelected").val(), f = $("#txtNetWorth").val(); "(not defined)" != f && $("#netWorthLabel").html(u + " ranges selected"); var C = $("#txtTotalEthnicitySelected").val(), g = $("#txtEthnicity").val(); if ("(not defined)" != g) { $("#ethnicityLabel").html(C + " selected"); var x = "Z", A = "R", I = "O", y = "B", k = "F", S = "G", w = "H", L = "I", N = "J", E = "M", B = "N", M = "P", P = "S", W = "D", R = "X"; g.indexOf(x) > -1 && ($("#btnAfricanAmerican").removeClass(), $("#btnAfricanAmerican").addClass("btn btn-sm btn-block selected")), g.indexOf(A) > -1 && ($("#btnArab").removeClass(), $("#btnArab").addClass("btn btn-sm btn-block selected")), g.indexOf(I) > -1 && ($("#btnAsian").removeClass(), $("#btnAsian").addClass("btn btn-sm btn-block selected")), g.indexOf(y) > -1 && ($("#btnAsianNonOriental").removeClass(), $("#btnAsianNonOriental").addClass("btn btn-sm btn-block selected")), g.indexOf(k) > -1 && ($("#btnFrench").removeClass(), $("#btnFrench").addClass("btn btn-sm btn-block selected")), g.indexOf(S) > -1 && ($("#btnGerman").removeClass(), $("#btnGerman").addClass("btn btn-sm btn-block selected")), g.indexOf(w) > -1 && ($("#btnHispanic").removeClass(), $("#btnHispanic").addClass("btn btn-sm btn-block selected")), g.indexOf(L) > -1 && ($("#btnItalian").removeClass(), $("#btnItalian").addClass("btn btn-sm btn-block selected")), g.indexOf(N) > -1 && ($("#btnJewish").removeClass(), $("#btnJewish").addClass("btn btn-sm btn-block selected")), g.indexOf(E) > -1 && ($("#btnMiscellaneous").removeClass(), $("#btnMiscellaneous").addClass("btn btn-sm btn-block selected")), g.indexOf(B) > -1 && ($("#btnNorthernEuropean").removeClass(), $("#btnNorthernEuropean").addClass("btn btn-sm btn-block selected")), g.indexOf(M) > -1 && ($("#btnPolynesian").removeClass(), $("#btnPolynesian").addClass("btn btn-sm btn-block selected")), g.indexOf(P) > -1 && ($("#btnScottishIrish").removeClass(), $("#btnScottishIrish").addClass("btn btn-sm btn-block selected")), g.indexOf(W) > -1 && ($("#btnSouthernEuropean").removeClass(), $("#btnSouthernEuropean").addClass("btn btn-sm btn-block selected")), g.indexOf(R) > -1 && ($("#btnUnclassified").removeClass(), $("#btnUnclassified").addClass("btn btn-sm btn-block selected")) } } $(function () {
    $("#incomeSlider").slider({
        range: !0, min: 0, max: 25e4, step: 5e3, values: [0, 25e4], stop: function (t, e) { GetIncomeRange(), BuildPostUrl(), CalculateAddressedCount() }, slide: function (t, e) {
            $("#minIncome").html(Formatter.CurrencyDollars(e.values[0])),
            e.values[1] >= 25e4 ? $("#maxIncome").html(Formatter.CurrencyDollars(e.values[1]) + "+") : $("#maxIncome").html(Formatter.CurrencyDollars(e.values[1])), 0 == e.values[0] && e.values[1] >= 25e4 ? $("#incomeLabel").html("No Filter") : $("#incomeLabel").html(BuildIncomeLabel()), $("#hidRawMinIncome").val(e.values[0]), $("#hidRawMaxIncome").val(e.values[1]), $("#txtMinIncome").val(e.values[0]), $("#txtMaxIncome").val(e.values[1])
        }
    }), $("#hidRawMinIncome").val($("#incomeSlider").slider("values", 0)), $("#hidRawMaxIncome").val($("#incomeSlider").slider("values", 1)), $("#minIncome").html(Formatter.CurrencyDollars($("#incomeSlider").slider("values", 0))), $("#incomeSlider").slider("values", 1) >= 25e4 ? $("#maxIncome").html(Formatter.CurrencyDollars(parseInt($("#incomeSlider").slider("values", 1))) + "+") : $("#maxIncome").html(Formatter.CurrencyDollars(parseInt($("#incomeSlider").slider("values", 1)))), $("#ageSlider").slider({ range: !0, min: 18, max: 75, step: 1, values: [18, 75], stop: function (t, e) { GetAgeRange(), BuildPostUrl(), CalculateAddressedCount() }, slide: function (t, e) { $("#minAge").html(e.values[0]), e.values[1] >= 75 ? $("#maxAge").html(e.values[1] + "+") : $("#maxAge").html(e.values[1]), 18 == e.values[0] && 75 == e.values[1] ? $("#ageLabel").html("No Filter") : $("#ageLabel").html(BuildAgeLabel()), $("#hidRawMinAge").val(e.values[0]), $("#hidRawMaxAge").val(e.values[1]), $("#txtMinAge").val(e.values[0]), $("#txtMaxAge").val(e.values[1]) } }), $("#hidRawMinAge").val($("#ageSlider").slider("values", 0)), $("#hidRawMaxAge").val($("#ageSlider").slider("values", 1)), $("#minAge").html($("#ageSlider").slider("values", 0)), $("#ageSlider").slider("values", 1) >= 75 ? $("#maxAge").html($("#ageSlider").slider("values", 1) + "+") : $("#maxAge").html($("#ageSlider").slider("values", 1)), $("#netWorthSlider").slider({ range: !0, min: 0, max: 1e6, step: 1e4, values: [0, 1e6], slide: function (t, e) { $("#minNetWorth").html("$" + NumberWithCommas(e.values[0])), e.values[1] >= 1e6 ? $("#maxNetWorth").html("$" + NumberWithCommas(e.values[1]) + " and above") : $("#maxNetWorth").html("$" + NumberWithCommas(e.values[1])), 0 == e.values[0] && e.values[1] >= 1e6 ? $("#netWorthLabel").html("No Filter") : $("#netWorthLabel").html(BuildNetWorthLabel()), $("#hidRawMinNetWorth").val(e.values[0]), $("#hidRawMaxNetWorth").val(e.values[1]), GetNetWorthRange(), BuildPostUrl(), CalculateAddressedCount() } }), $("#hidRawMinNetWorth").val($("#netWorthSlider").slider("values", 0)), $("#hidRawMaxNetWorth").val($("#netWorthSlider").slider("values", 1)), $("#minNetWorth").html("$" + Formatter.Commas($("#netWorthSlider").slider("values", 0))), $("#netWorthSlider").slider("values", 1) >= 1e6 ? $("#maxNetWorth").html("$" + Formatter.Commas($("#netWorthSlider").slider("values", 1) + "+")) : $("#maxNetWorth").html("$" + Formatter.Commas($("#netWorthSlider").slider("values", 1))), 1 == CheckForRevisit() ? (PreselectFiltersAndLabels(), HideFirstTimeBlocks()) : ($("#defineYourAreaToBegin").show(2e3), $("#defineYourAreaToBegin").slideDown(2e3))
}), $("a[data-action=rotateIcon]").click(function (t) { t.preventDefault(); var e = $(this).attr("id"), a = ""; "homeOwnershipSelect" == e && (a = $("#homeOwnershipIcon").attr("class"), "fa fa-plus fa-border" == a ? ($("#homeOwnershipIcon").removeAttr("class"), $("#homeOwnershipIcon").attr("class", "fa fa-minus fa-border")) : ($("#homeOwnershipIcon").removeAttr("class"), $("#homeOwnershipIcon").attr("class", "fa fa-plus fa-border")), $("#maritalStatusIcon").removeAttr("class"), $("#maritalStatusIcon").attr("class", "fa fa-plus fa-border"), $("#childrenIcon").removeAttr("class"), $("#childrenIcon").attr("class", "fa fa-plus fa-border"), $("#genderIcon").removeAttr("class"), $("#genderIcon").attr("class", "fa fa-plus fa-border"), $("#incomeIcon").removeAttr("class"), $("#incomeIcon").attr("class", "fa fa-plus fa-border"), $("#ageIcon").removeAttr("class"), $("#ageIcon").attr("class", "fa fa-plus fa-border"), $("#propertyIcon").removeAttr("class"), $("#propertyIcon").attr("class", "fa fa-plus fa-border"), $("#ethnicityIcon").removeAttr("class"), $("#ethnicityIcon").attr("class", "fa fa-plus fa-border"), $("#netWorthIcon").removeAttr("class"), $("#netWorthIcon").attr("class", "fa fa-plus fa-border")), "maritalStatusSelect" == e && (a = $("#maritalStatusIcon").attr("class"), "fa fa-plus fa-border" == a ? ($("#maritalStatusIcon").removeAttr("class"), $("#maritalStatusIcon").attr("class", "fa fa-minus fa-border")) : ($("#maritalStatusIcon").removeAttr("class"), $("#maritalStatusIcon").attr("class", "fa fa-plus fa-border")), $("#homeOwnershipIcon").removeAttr("class"), $("#homeOwnershipIcon").attr("class", "fa fa-plus fa-border"), $("#childrenIcon").removeAttr("class"), $("#childrenIcon").attr("class", "fa fa-plus fa-border"), $("#genderIcon").removeAttr("class"), $("#genderIcon").attr("class", "fa fa-plus fa-border"), $("#incomeIcon").removeAttr("class"), $("#incomeIcon").attr("class", "fa fa-plus fa-border"), $("#ageIcon").removeAttr("class"), $("#ageIcon").attr("class", "fa fa-plus fa-border"), $("#propertyIcon").removeAttr("class"), $("#propertyIcon").attr("class", "fa fa-plus fa-border"), $("#ethnicityIcon").removeAttr("class"), $("#ethnicityIcon").attr("class", "fa fa-plus fa-border"), $("#netWorthIcon").removeAttr("class"), $("#netWorthIcon").attr("class", "fa fa-plus fa-border")), "childrenSelect" == e && (a = $("#childrenIcon").attr("class"), "fa fa-plus fa-border" == a ? ($("#childrenIcon").removeAttr("class"), $("#childrenIcon").attr("class", "fa fa-minus fa-border")) : ($("#childrenIcon").removeAttr("class"), $("#childrenIcon").attr("class", "fa fa-plus fa-border")), $("#homeOwnershipIcon").removeAttr("class"), $("#homeOwnershipIcon").attr("class", "fa fa-plus fa-border"), $("#maritalStatusIcon").removeAttr("class"), $("#maritalStatusIcon").attr("class", "fa fa-plus fa-border"), $("#genderIcon").removeAttr("class"), $("#genderIcon").attr("class", "fa fa-plus fa-border"), $("#incomeIcon").removeAttr("class"), $("#incomeIcon").attr("class", "fa fa-plus fa-border"), $("#ageIcon").removeAttr("class"), $("#ageIcon").attr("class", "fa fa-plus fa-border"), $("#propertyIcon").removeAttr("class"), $("#propertyIcon").attr("class", "fa fa-plus fa-border"), $("#ethnicityIcon").removeAttr("class"), $("#ethnicityIcon").attr("class", "fa fa-plus fa-border"), $("#netWorthIcon").removeAttr("class"), $("#netWorthIcon").attr("class", "fa fa-plus fa-border")), "genderSelect" == e && (a = $("#genderIcon").attr("class"), "fa fa-plus fa-border" == a ? ($("#genderIcon").removeAttr("class"), $("#genderIcon").attr("class", "fa fa-minus fa-border")) : ($("#genderIcon").removeAttr("class"), $("#genderIcon").attr("class", "fa fa-plus fa-border")), $("#homeOwnershipIcon").removeAttr("class"), $("#homeOwnershipIcon").attr("class", "fa fa-plus fa-border"), $("#maritalStatusIcon").removeAttr("class"), $("#maritalStatusIcon").attr("class", "fa fa-plus fa-border"), $("#childrenIcon").removeAttr("class"), $("#childrenIcon").attr("class", "fa fa-plus fa-border"), $("#incomeIcon").removeAttr("class"), $("#incomeIcon").attr("class", "fa fa-plus fa-border"), $("#ageIcon").removeAttr("class"), $("#ageIcon").attr("class", "fa fa-plus fa-border"), $("#propertyIcon").removeAttr("class"), $("#propertyIcon").attr("class", "fa fa-plus fa-border"), $("#ethnicityIcon").removeAttr("class"), $("#ethnicityIcon").attr("class", "fa fa-plus fa-border"), $("#netWorthIcon").removeAttr("class"), $("#netWorthIcon").attr("class", "fa fa-plus fa-border")), "incomeSelect" == e && (a = $("#incomeIcon").attr("class"), "fa fa-plus fa-border" == a ? ($("#incomeIcon").removeAttr("class"), $("#incomeIcon").attr("class", "fa fa-minus fa-border")) : ($("#incomeIcon").removeAttr("class"), $("#incomeIcon").attr("class", "fa fa-plus fa-border")), $("#homeOwnershipIcon").removeAttr("class"), $("#homeOwnershipIcon").attr("class", "fa fa-plus fa-border"), $("#maritalStatusIcon").removeAttr("class"), $("#maritalStatusIcon").attr("class", "fa fa-plus fa-border"), $("#childrenIcon").removeAttr("class"), $("#childrenIcon").attr("class", "fa fa-plus fa-border"), $("#genderIcon").removeAttr("class"), $("#genderIcon").attr("class", "fa fa-plus fa-border"), $("#ageIcon").removeAttr("class"), $("#ageIcon").attr("class", "fa fa-plus fa-border"), $("#propertyIcon").removeAttr("class"), $("#propertyIcon").attr("class", "fa fa-plus fa-border"), $("#ethnicityIcon").removeAttr("class"), $("#ethnicityIcon").attr("class", "fa fa-plus fa-border"), $("#netWorthIcon").removeAttr("class"), $("#netWorthIcon").attr("class", "fa fa-plus fa-border")), "ageSelect" == e && (a = $("#ageIcon").attr("class"), "fa fa-plus fa-border" == a ? ($("#ageIcon").removeAttr("class"), $("#ageIcon").attr("class", "fa fa-minus fa-border")) : ($("#ageIcon").removeAttr("class"), $("#ageIcon").attr("class", "fa fa-plus fa-border")), $("#homeOwnershipIcon").removeAttr("class"), $("#homeOwnershipIcon").attr("class", "fa fa-plus fa-border"), $("#maritalStatusIcon").removeAttr("class"), $("#maritalStatusIcon").attr("class", "fa fa-plus fa-border"), $("#childrenIcon").removeAttr("class"), $("#childrenIcon").attr("class", "fa fa-plus fa-border"), $("#genderIcon").removeAttr("class"), $("#genderIcon").attr("class", "fa fa-plus fa-border"), $("#incomeIcon").removeAttr("class"), $("#incomeIcon").attr("class", "fa fa-plus fa-border"), $("#propertyIcon").removeAttr("class"), $("#propertyIcon").attr("class", "fa fa-plus fa-border"), $("#ethnicityIcon").removeAttr("class"), $("#ethnicityIcon").attr("class", "fa fa-plus fa-border"), $("#netWorthIcon").removeAttr("class"), $("#netWorthIcon").attr("class", "fa fa-plus fa-border")), "propertySelect" == e && (a = $("#propertyIcon").attr("class"), "fa fa-plus fa-border" == a ? ($("#propertyIcon").removeAttr("class"), $("#propertyIcon").attr("class", "fa fa-minus fa-border")) : ($("#propertyIcon").removeAttr("class"), $("#propertyIcon").attr("class", "fa fa-plus fa-border")), $("#homeOwnershipIcon").removeAttr("class"), $("#homeOwnershipIcon").attr("class", "fa fa-plus fa-border"), $("#maritalStatusIcon").removeAttr("class"), $("#maritalStatusIcon").attr("class", "fa fa-plus fa-border"), $("#childrenIcon").removeAttr("class"), $("#childrenIcon").attr("class", "fa fa-plus fa-border"), $("#genderIcon").removeAttr("class"), $("#genderIcon").attr("class", "fa fa-plus fa-border"), $("#incomeIcon").removeAttr("class"), $("#incomeIcon").attr("class", "fa fa-plus fa-border"), $("#ethnicityIcon").removeAttr("class"), $("#ethnicityIcon").attr("class", "fa fa-plus fa-border"), $("#ageIcon").removeAttr("class"), $("#ageIcon").attr("class", "fa fa-plus fa-border"), $("#netWorthIcon").removeAttr("class"), $("#netWorthIcon").attr("class", "fa fa-plus fa-border")), "netWorthSelect" == e && (a = $("#netWorthIcon").attr("class"), "fa fa-plus fa-border" == a ? ($("#netWorthIcon").removeAttr("class"), $("#netWorthIcon").attr("class", "fa fa-minus fa-border")) : ($("#netWorthIcon").removeAttr("class"), $("#netWorthIcon").attr("class", "fa fa-plus fa-border")), $("#homeOwnershipIcon").removeAttr("class"), $("#homeOwnershipIcon").attr("class", "fa fa-plus fa-border"), $("#maritalStatusIcon").removeAttr("class"), $("#maritalStatusIcon").attr("class", "fa fa-plus fa-border"), $("#childrenIcon").removeAttr("class"), $("#childrenIcon").attr("class", "fa fa-plus fa-border"), $("#genderIcon").removeAttr("class"), $("#genderIcon").attr("class", "fa fa-plus fa-border"), $("#incomeIcon").removeAttr("class"), $("#incomeIcon").attr("class", "fa fa-plus fa-border"), $("#ethnicityIcon").removeAttr("class"), $("#ethnicityIcon").attr("class", "fa fa-plus fa-border"), $("#ageIcon").removeAttr("class"), $("#ageIcon").attr("class", "fa fa-plus fa-border"), $("#propertyIcon").removeAttr("class"), $("#propertyIcon").attr("class", "fa fa-plus fa-border")), "ethnicitySelect" == e && (a = $("#ethnicityIcon").attr("class"), "fa fa-plus fa-border" == a ? ($("#ethnicityIcon").removeAttr("class"), $("#ethnicityIcon").attr("class", "fa fa-minus fa-border")) : ($("#ethnicityIcon").removeAttr("class"), $("#ethnicityIcon").attr("class", "fa fa-plus fa-border")), $("#homeOwnershipIcon").removeAttr("class"), $("#homeOwnershipIcon").attr("class", "fa fa-plus fa-border"), $("#maritalStatusIcon").removeAttr("class"), $("#maritalStatusIcon").attr("class", "fa fa-plus fa-border"), $("#childrenIcon").removeAttr("class"), $("#childrenIcon").attr("class", "fa fa-plus fa-border"), $("#genderIcon").removeAttr("class"), $("#genderIcon").attr("class", "fa fa-plus fa-border"), $("#incomeIcon").removeAttr("class"), $("#incomeIcon").attr("class", "fa fa-plus fa-border"), $("#ageIcon").removeAttr("class"), $("#ageIcon").attr("class", "fa fa-plus fa-border"), $("#propertyIcon").removeAttr("class"), $("#propertyIcon").attr("class", "fa fa-plus fa-border"), $("#netWorthIcon").removeAttr("class"), $("#netWorthIcon").attr("class", "fa fa-plus fa-border")) }), $("#resetFilters").click(function (t) { t.preventDefault(); var e = 11, a = 19; for ($("#btnHomeowner").removeClass(), $("#btnHomeowner").addClass("btn btn-sm btn-block"), $("#btnRenter").removeClass(), $("#btnRenter").addClass("btn btn-sm btn-block"), $("#homeOwnershipLabel").html("No Filter"), $("#txtHomeOwnership").val("(not defined)"), $("#btnMarried").removeClass(), $("#btnMarried").addClass("btn btn-sm btn-block"), $("#btnSingle").removeClass(), $("#btnSingle").addClass("btn btn-sm btn-block"), $("#txtMartialStatus").val("(not defined)"), $("#maritalStatusLabel").html("No Filter"), $("#btnChildren").removeClass(), $("#btnChildren").addClass("btn btn-sm btn-block"), $("#btnNoChildren").removeClass(), $("#btnNoChildren").addClass("btn btn-sm btn-block"), $("#txtChildren").val("(not defined)"), $("#childrenLabel").html("No Filter"), $("#minIncome").html("$0"), $("#maxIncome").html("$250,000+"), $("#txtCombinedIncome").val("(not defined)"), $("#hidRawMinIncome").val(0), $("#hidRawMaxIncome").val(25e4), $("#incomeLabel").html("No Filter"), $("#minAge").html("18"), $("#maxAge").html("75"), $("#ageLabel").html("No Filter"), $("#hidRawMinAge").val(18), $("#hidRawMaxAge").val(75), $("#txtAgeRanges").val("(not defined)"), $("#minProperty").html("$0"), $("#maxProperty").html("$500k+"), $("#propertyLabel").html("No Filter"), $("#hidRawMinProperty").val(0), $("#hidRawMaxProperty").val(5e5), $("#txtPropertyValue").val("(not defined)"), i = 1; i <= e; i++) $("#chkNetWorth" + i).is(":checked") && $("#chkNetWorth" + i).prop("checked", !1); for ($("#chkSelectAllNetWorth").prop("checked", !1), $("#selectAllNetWorthLabel").html("Select All"), $("#netWorthLabel").html("No Filter"), $("#txtNetWorth").val("(not defined)"), $("#hidNetWorthTotalSelected").val("0"), $("#txtNetWorthTotalSelected").val("0"), i = 1; i <= a; i++) $("#chkPropValue" + i).is(":checked") && $("#chkPropValue" + i).prop("checked", !1); $("#chkSelectAllPropValue").prop("checked", !1), $("#selectAllPropValueLabel").html("Select All"), $("#propertyLabel").html("No Filter"), $("#txtPropertyValue").val("(not defined)"), $("#hidPropValueTotalSelected").val("0"), $("#txtPropValueTotalSelected").val("0"), $("#btnMale").removeClass(), $("#btnMale").addClass("btn btn-sm btn-block"), $("#btnFemale").removeClass(), $("#btnFemale").addClass("btn btn-sm btn-block"), $("#txtGender").val("(not defined)"), $("#genderLabel").html("No Filter"), $("#txtEthnicity").val("(not defined)"), $("#ethnicityLabel").html("No Filter"), $("#btnAfricanAmerican").removeClass(), $("#btnAfricanAmerican").addClass("btn btn-sm btn-block"), $("#btnArab").removeClass(), $("#btnArab").addClass("btn btn-sm btn-block"), $("#btnAsian").removeClass(), $("#btnAsian").addClass("btn btn-sm btn-block"), $("#btnAsianNonOriental").removeClass(), $("#btnAsianNonOriental").addClass("btn btn-sm btn-block"), $("#btnFrench").removeClass(), $("#btnFrench").addClass("btn btn-sm btn-block"), $("#btnGerman").removeClass(), $("#btnGerman").addClass("btn btn-sm btn-block"), $("#btnHispanic").removeClass(), $("#btnHispanic").addClass("btn btn-sm btn-block"), $("#btnItalian").removeClass(), $("#btnItalian").addClass("btn btn-sm btn-block"), $("#btnJewish").removeClass(), $("#btnJewish").addClass("btn btn-sm btn-block"), $("#btnMiscellaneous").removeClass(), $("#btnMiscellaneous").addClass("btn btn-sm btn-block"), $("#btnNorthernEuropean").removeClass(), $("#btnNorthernEuropean").addClass("btn btn-sm btn-block"), $("#btnPolynesian").removeClass(), $("#btnPolynesian").addClass("btn btn-sm btn-block"), $("#btnScottishIrish").removeClass(), $("#btnScottishIrish").addClass("btn btn-sm btn-block"), $("#btnSouthernEuropean").removeClass(), $("#btnSouthernEuropean").addClass("btn btn-sm btn-block"), $("#btnUnclassified").removeClass(), $("#btnUnclassified").addClass("btn btn-sm btn-block"), $("#txtTotalEthnicitySelected").val("0"), $("#hidTotalEthnicitySelected").val("0"), BuildPostUrl(), CalculateAddressedCount(), UpdateOrderSteps(1) }), $("#changeTarget").click(function (t) { t.preventDefault(), $("#introBlock").show(1e3), $("#targetAreaBlock").show(1e3), $("#resultsBlock").hide(1e3), $("#filtersBlock").hide(1e3), UpdateOrderSteps(1) }), $("#radAddress").click(function () { $("#addressBlock").show(1e3), $("#zipCodesBlock").hide(1e3) }), $("#radZipCodes").click(function () { $("#addressBlock").hide(1e3), $("#zipCodesBlock").show(1e3) }), $("#chkSelectAllNetWorth").click(function () { $(this).prop("checked") ? ($(".networth").prop("checked", !0), $("#selectAllNetWorthLabel").html("Deselect All"), $("#txtNetWorth").val("(not defined)")) : ($(".networth").prop("checked", !1), $("#selectAllNetWorthLabel").html("Select All")), $(".networth").click(function () { $(".networth").length == $(".networth:checked").length ? $("#chkSelectAllNetWorth").prop("checked", !0) : $("#chkSelectAllNetWorth").prop("checked", !1) }), BuildNetWorthString(), BuildPostUrl(), BuildNetWorthLabel() }), $("#chkSelectAllPropValue").click(function () { $(this).prop("checked") ? ($(".propval").prop("checked", !0), $("#selectAllPropValueLabel").html("Deselect All"), $("#txtPropertyValue").val("(not defined)")) : ($(".propval").prop("checked", !1), $("#selectAllPropValueLabel").html("Select All")), $(".propval").click(function () { $(".propval").length == $(".propval:checked").length ? $("#chkSelectAllPropValue").prop("checked", !0) : $("#chkSelectAllPropValue").prop("checked", !1) }), BuildPropValueString(), BuildPostUrl(), BuildPropValueLabel() }), $("#show-sample").click(function () { event.preventDefault(); var t = window.location.hostname, e = "http://" + t + "/Resources/GetAddressedSampleSet.ashx?OutputSample=True&CountOnly=False", a = "&Radius=" + $("#ddlRadiusValue").val(), l = "&Lat=" + $("#txtLatitude").val(), s = "&Lon=" + $("#txtLongitude").val(), n = "&RadiusType=" + $("#ddlRadiusType").val(), r = ""; "(not defined)" != $("#txtGender").val() && (r = "&Gender=" + $("#txtGender").val()); var o = ""; "(not defined)" != $("#txtHomeOwnership").val() && (o = "&HomeOwnership=" + $("#txtHomeOwnership").val()); var i = ""; "(not defined)" != $("#txtCombinedIncome").val() && (i = "&Income=" + $("#txtCombinedIncome").val()); var c = ""; "(not defined)" != $("#txtChildren").val() && (c = "&KidsPresent=" + $("#txtChildren").val()); var d = ""; "(not defined)" != $("#txtMartialStatus").val() && (d = "&MaritalStatus=" + $("#txtMartialStatus").val()); var b = ""; "(not defined)" != $("#txtAgeRanges").val() && (b = "&AgeRange=" + $("#txtAgeRanges").val()); var m = ""; "(not defined)" != $("#txtEthnicity").val() && (m = "&Ethnicity=" + $("#txtEthnicity").val()); var h = ""; "(not defined)" != $("#txtZipCodes").val() && (h = "&ZipCode=" + $("#txtZipCodes").val()); var p = ""; "(not defined)" != $("#txtPropertyValue").val() && (p = "&HomeMktVal=" + $("#txtPropertyValue").val()); var v = ""; "(not defined)" != $("#txtNetWorth").val() && (p = "&NetWorth=" + $("#txtNetWorth").val()); var u = e + a + l + s + n + r + o + i + c + d + b + m + h + p + v; console.log(u), $("#sample-data").block({ message: '<div><br/><h5><span class="fa fa-2x fa-cog fa-spin"></span>&nbsp;Getting your sample.....</h5><br/><br/><br/></div>', css: { width: "100%", height: "100%", border: "1px solid #dddddd" } }), $.ajax({ url: u, type: "POST", success: function (t) { null != t && "" != t && (t.length < 400 ? $("#sample-data").html('<div class="alert alert-danger"><h3 class="text-danger"><span class="fa fa-exclamation-circle fa-2x"></span>&nbsp;Uh oh, something went wrong.</h3><p>We\'re sorry but something went wrong when retrieving the sample. Please <a href="/Support">contact us</a> to request sample data.</p><p>&nbsp;</p></div>') : $("#sample-data").html(t)), $("#sample-data").unblock() }, error: function (t) { console.log("Show Sample Error: " + t.statusText), $("#sample-data").html('<div class="alert alert-danger"><h3 class="text-danger"><span class="fa fa-exclamation-circle fa-2x"></span>&nbsp;Uh oh, something went wrong.</h3><p>We\'re sorry but something went wrong when retrieving the sample. Please <a href="/Support">contact us</a> to request sample data.</p><p>&nbsp;</p><p>Error Code: ' + t.statusText + "</p></div>"), $("#sample-data").unblock() } }) });